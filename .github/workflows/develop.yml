name: Develop Build
on:
  push:
    branches:
      - develop
jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
          extensions: mbstring, intl
          ini-values: post_max_size=256M, short_open_tag=On
          coverage: xdebug

      - name: Check PHP Version
        run: php -v

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: composer install --optimize-autoloader --prefer-dist

      - name: phpcs tests
        run: composer phpcs

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm install
        run: npm install

      - name: npm run lint-js
        run: npm run lint-js

      - name: Notify Lint
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: Failure lint
          fields: repo,message,commit,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  codeCheck:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php: [ '5.6', '7.2', '7.3', '7.4' ]
    name: PHP Error Check (PHP ${{ matrix.php }})
    needs: [ lint ]
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          ini-values: post_max_size=256M, short_open_tag=On
          coverage: xdebug

      - name: php -l
        run: bash bin/php-l.sh

      - name: Error Check
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: "Failure : Error Check"
          fields: repo,message,commit,job
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  release:
    name: Release
    needs: [ lint ,codeCheck ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          ref: 'develop'
      - name: Use Node.js 12.14
        uses: actions/setup-node@v1
        with:
          node-version: '12.14'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: npm install
        run: npm install

      - name: Build
        run: npm run build

      - name: Create Deploy Files(beta)
        run: npm run build:deploy-files-beta

      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          LOCAL_DIR: build
          REMOTE_DIR: ${{ secrets.FTP_REMOTE_DIR_DEVELOP }}

      - name: Notify Release
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: "[yStandard Blocks]開発バージョンのアップデート準備OK！"
          fields: repo,message
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()
